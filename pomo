#!/usr/bin/env bash
# pomo
# bash 4+ pls

# much code lifted from dylanaraps' fff
# and lots of their pure-bash-bible

VERSION="0.5.0"

timer_col=37   # white
text_col=31    # red
work_time=1500
break_time=300
long_break_time=1800
work_time_cycle=4
s=("working" "break" "tea break")

bell() {
	echo -e '\a'
}

tsize() {
	read -r LINES COLUMNS < <(stty size)
}

start() {
	printf '\e[?1049h\e[?7l\e[?25l\e[2J\e[1;%sr' "$max_items"
	stty -echo
}

close() {
	printf '\e[?7h\e[?25h\e[2J\e[;r\e[?1049l'
	stty echo
}

cls() {
	printf '\e[%sH\e[9999C\e[1J%b\e[1;%sr' "$((LINES-2))" "${TMUX:+\e[2J}" "$max_items"
}

draw() {
	cls

	local ty="$((LINES/2))"
	local tx="$((COLUMNS/2))"
	local tw="${#s[$mode]}"

	printf "\u001b[%sm\e[%sH\e[%sC%02d:%02d\n" \
		   "$timer_col" \
		   "$ty" "$[tx-2]" \
		   "$[timer/60]" "$[timer%60]"

	printf "\u001b[%sm\e[%sH\e[%sC%s\n" \
		   "$text_col" \
		   "$[ty+1]" "$[tx-tw/2]" \
		   "${s[$mode]}"
}

usage() {
	echo
	echo "    pomo "${VERSION}
	echo
	echo "    -v  --version  shows pomo version"
	echo "    -h  --help     shows this screen"
	echo
}

main() {
	[ "$1" = -v ] || [ "$1" = --version ] && echo "pomo "${VERSION} && exit
	[ "$1" = -h ] || [ "$1" = --help ] && usage && exit

	trap 'close' EXIT
	trap 'tsize; draw' WINCH

	tsize
	start

	timer=$work_time
	counter=$work_time_cycle
	mode=0

	while true; do
		[[ -t 1 ]] || exit 1

		draw

		if ((mode<3)); then
			timer=$[timer-1]
		fi

		if ((timer<0)); then
			if ((mode==0)); then
				counter=$[counter-1]

				if ((counter==0)); then
					counter=$work_time_cycle
					timer=$long_break_time
					mode=2
					bell
				else
					timer=$break_time
					mode=1
					bell
				fi
			else
				timer=$work_time
				mode=0
				bell
			fi
		fi

		sleep 1
	done
}

main "$@"